import Head from 'next/head'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import * as React from 'react';
import AppBar from '@mui/material/AppBar';
import Box from '@mui/material/Box';
import Toolbar from '@mui/material/Toolbar';
import Typography from '@mui/material/Typography';
import Button from '@mui/material/Button';
import IconButton from '@mui/material/IconButton';
import MenuIcon from '@mui/icons-material/Menu';
import { ThemeProvider, createTheme } from '@mui/material/styles';
import CssBaseline from '@mui/material/CssBaseline';
import Container from '@mui/material/Container';
import Grid from '@mui/material/Grid';
import Stack from '@mui/material/Stack';
import TextField from '@mui/material/TextField';
import Card from '@mui/material/Card';
import CardContent from '@mui/material/CardContent';
import { useRef,useState} from 'react';
import Alert from '@mui/material/Alert';
import axios from "axios";
import Table_data from '../src/table_data';
import Slider from '@mui/material/Slider';



const darkTheme = createTheme({
  palette: {
    mode: 'dark',
  },
});
const inter = Inter({ subsets: ['latin'] })



export default function Home() {
  const inputRef = useRef(null);
  const [sliderValue,setsliderValue] = useState(0.5);

  const [valid_input,setvalid_input]=useState(false)
  const [prediction,setprediction]=useState(null)
  const handlePlayersChange = (event, newValue) => {
    // console.log('inscli', newValue);
    
    setsliderValue(a=>newValue);
    
  };


  function valuetext  (value) {
    return value;
  }


  const predict=()=>{
   
    if(inputRef.current.value=="")
    { console.log('in predict')
      setvalid_input(true)
    }
    else{
      console.log('slider input',sliderValue)
      var comments=inputRef.current.value
      console.log(comments);
      setvalid_input(false)
      axios.get(`https://comment-toxicity-ragul.up.railway.app/predict/${comments}`)
    .then((response) => {
      var data=response.data
      // console.log(data);
      return data
    })
    .then((data)=>{
          
         console.log(data);
         setprediction(data)

      })
    .catch(function (error) {
      console.log(error);
    });
      
   
        
    }
   
  }
  return (
    <>
    
    <ThemeProvider theme={darkTheme}>
    <CssBaseline />
      <Head>
        <title>Comment toxicity Detection</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
      <Box sx={{ flexGrow: 1 }}>
      <AppBar position="static">
        <Toolbar>
          <IconButton
            size="large"
            edge="start"
            color="inherit"
            aria-label="menu"
            sx={{ mr: 2 }}
          >
            <MenuIcon />
          </IconButton>
          <Typography variant="h6" component="div" sx={{ flexGrow: 1 }}>
            Comment Toxicity Detection 
          </Typography>
        </Toolbar>
      </AppBar>
    </Box>
<br />
<Container maxWidth="fixed" >
<Stack
        direction={{ xs: 'column', sm: 'row' }}
        spacing={{ xs: 1, sm: 1, md: 4 }}
       
      >
    
<Grid container spacing={2}>

<Grid item  md={6}>

<Card sx={{ minWidth: 275 }}>
      <CardContent>
     
        <Typography sx={{ fontSize: 14 }} color="text.secondary" gutterBottom>
        Comment Toxicity Detection 
        </Typography>
        {valid_input?<Alert severity="error">Enter the valid Input</Alert>:<></>}
        <br />

        <Typography variant="h5"  color="text.secondary"  >
        Threshold
        </Typography>

        <Slider
        
        aria-label="Temperature"
        defaultValue={0.5}
        getAriaValueText={valuetext}
        valueLabelDisplay="auto"
        step={0.25}
        marks
        min={0}
        max={1.00}
        onChange={handlePlayersChange}
       
      />

        <TextField margin="normal" fullWidth id="outlined-basic" label="Enter The Comments" variant="outlined" inputRef={inputRef} />
        <Button variant="contained" size="medium"  onClick={predict}>
          Predict
        </Button>
      </CardContent>
      
    </Card>

</Grid>


     
<Grid item  md={6}>
<Card sx={{ minWidth: 275 }}>
       {prediction && 
      <CardContent>
       
       <Typography sx={{ fontSize: 18 }} color="text.secondary" variant='h5' gutterBottom>
        Prediction Results
        </Typography>
  <Table_data data={{prediction:prediction,sliderValue:sliderValue}}/>
      </CardContent>
}      
    </Card>

</Grid>

    
    </Grid>
      </Stack>
    
    </Container>

    
    </ThemeProvider>
    </>
  )
}
